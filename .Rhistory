modalities
modalities <- data.frame(year, no_contrib, fixed_contrib, growing_contrib)
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'dark green')) +
geom_line(aes(x = year, y = fixed_contrib), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, legend = 'dark green')) +
geom_line(aes(x = year, y = fixed_contrib), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'dark green')) +
geom_line(aes(x = year, y = fixed_contrib), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution')) +
geom_line(aes(x = year, y = fixed_contrib), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution')) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution'), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution'), color = 'dark green') +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution'), color = 'blue') +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution')) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib), color = 'red') +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution')) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution', size = 1)) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution', size = 0.5)) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution', size = 0.25)) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution'), size = 1) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution'), size = 1.5) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution')) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution')) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution'), size = 1.5) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution'), size = 1.5) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution'), size = 1.5) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'no contribution'), size = 1.25) +
geom_line(aes(x = year, y = fixed_contrib, color = 'fixed contribution'), size = 1.25) +
geom_line(aes(x = year, y = growing_contrib, color = 'growing contribution'), size = 1.25) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'Mode 1: No Contribution'), size = 1.25) +
geom_line(aes(x = year, y = fixed_contrib, color = 'Mode 2: Fixed Contribution'), size = 1.25) +
geom_line(aes(x = year, y = growing_contrib, color = 'Mode 3: Growing Contribution'), size = 1.25) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities') +
theme(legend.position = 'bottom')
modalities
+ geom_line(aes(x = year, y = no_contrib, color = 'Mode 1: No Contribution', y_max = 4500), size = 1.25)
+ labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities')
ggplot(data = modalities) +
geom_line(aes(
x = year,
y = no_contrib,
color = 'Mode 1: No Contribution',
y_max = 4500
),
size = 1.25) +
geom_line(aes(x = year, y = fixed_contrib, color = 'Mode 2: Fixed Contribution'),
size = 1.25) +
geom_line(aes(x = year, y = growing_contrib, color = 'Mode 3: Growing Contribution'),
size = 1.25) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities')
shiny::runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/shinyapp')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/shinyapp')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/shinyapp')
faithful
?faithful
?inputPanel
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
numericInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/shinyapp')
for(i in 0:15){
year2[i + 1] <- i
savings_type[i + 1] <- 'Regular Savings (r = 0.10%)'
balance[i + 1] <- future_value(10000, 0.10, i)
modality[i + 1] <- 'No Contribution'
}
year2 <- rep(0, 100)
savings_type <- rep(0, 100)
balance <- rep(0, 100)
modality <- rep(0, 100)
savings_type[i + 1] <- 'Regular Savings (r = 0.10%)'
for(i in 0:15){
year2[i + 1] <- i
savings_type[i + 1] <- 'Regular Savings (r = 0.10%)'
balance[i + 1] <- future_value(10000, 0.10, i)
modality[i + 1] <- 'No Contribution'
}
year
year2
savings_type
balance
modality
for(i in 1:3){
a <- c('Regular Savings (r = 0.10%)', 'High Yield Savings (r = 2.25%)', 'Index Fund (r = 6.5%')
type <- a[i]
b <- c('No Contribution', 'Fixed Contribution', 'Growing Contribution')
modal <- b[i]
for(j in 0:15){
savings_type[j + 1] <- type
balance[j + 1] <- future(10000, 0.10, j)
}
}
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
#'@title future value
#'@description calculates the future value of an investment with an annual rate of return
#'@param amount amount of initial investment
#'@param rate annual rate of return as a decimal
#'@param years number of years of the investment
#'@return calculated value of the investment after a set number of years
future_value <- function(amount, rate, years) {
x = amount * (1 + rate)^years
return(x)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
#'@title future value of annuity
#'@description calculates the future value of savings that you put annually while the total amount increases with a rate of return
#'@param C contribution at the end of each year
#'@param r annual rate of return in decimal
#'@param t time in years
#'@param FVA future value of annuity
#'@return FVA
annuity <- function(contrib, rate, years) {
FVA = contrib * (((1 + rate)^years - 1) / rate)
return(FVA)
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
#'@title future value of growing annuity
#'@description calculates the future value of an account that grows every year by a percentage while the account itself increaes in value according to a rate of return
#'@param C first contribution made on year one
#'@param r annual rate of return on the account in decimals
#'@param g growth rate of the account each year in decimals
#'@param t time in years
#'@param FVGA future value of growing annuity
#'@return FVGA in dollars
growing_annuity <- function(contrib, rate, growth, years) {
FVGA = contrib * ((((1 + rate)^years) - ((1 + growth)^years)) / (rate - growth))
return(FVGA)
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
year <- seq(0, 10, 1)
no_contrib <- rep(0, 11)
fixed_contrib <- rep(0, 11)
growing_contrib <- rep(0, 11)
for(i in 0:10) {
no_contrib[i + 1] <- future_value(1000, 0.05, i)
fixed_contrib[i + 1] <- annuity(contrib = 200, rate = 0.05, years = i) + no_contrib[i + 1]
growing_contrib[i + 1] <- growing_annuity(contrib = 200, rate = 0.05, growth = 0.03,  years = i) + no_contrib[i + 1]
}
modalities <- data.frame(year, no_contrib, fixed_contrib, growing_contrib)
ggplot(data = modalities) +
geom_line(aes(x = year, y = no_contrib, color = 'Mode 1: No Contribution', y_max = 4500), size = 1.25) +
geom_line(aes(x = year, y = fixed_contrib, color = 'Mode 2: Fixed Contribution'), size = 1.25) +
geom_line(aes(x = year, y = growing_contrib, color = 'Mode 3: Growing Contribution'), size = 1.25) +
labs(x = 'years', y = 'dollars', title = 'Growth of Different Savings Modalities')
year2 <- rep(0, 100)
savings_type <- rep(0, 100)
balance <- rep(0, 100)
modality <- rep(0, 100)
#Regular Savings (r = 0.10%)
for(i in 0:15){
year2[i + 1] <- i
savings_type[i + 1] <- 'Regular Savings (r = 0.10%)'
balance[i + 1] <- future_value(10000, 0.10, i)
modality[i + 1] <- 'No Contribution'
}
for(i in 1:3){
a <- c('Regular Savings (r = 0.10%)', 'High Yield Savings (r = 2.25%)', 'Index Fund (r = 6.5%')
type <- a[i]
b <- c('No Contribution', 'Fixed Contribution', 'Growing Contribution')
modal <- b[i]
for(j in 0:15){
savings_type[j + 1] <- type
balance[j + 1] <- future(10000, 0.10, j)
}
}
for(i in 0:15) {
for(j in 1:3) {}
no_contrib[i + 1] <- future_value(1000, 0.05, i)
fixed_contrib[i + 1] <- annuity(contrib = 200, rate = 0.05, years = i) + no_contrib[i + 1]
growing_contrib[i + 1] <- growing_annuity(contrib = 200, rate = 0.05, growth = 0.03,  years = i) + no_contrib[i + 1]
}
for(i in 1:3) {
for(j in 0:15) {
}
}
for(i in 1:3){
a <- c('Regular Savings (r = 0.10%)', 'High Yield Savings (r = 2.25%)', 'Index Fund (r = 6.5%')
type <- a[i]
b <- c('No Contribution', 'Fixed Contribution', 'Growing Contribution')
modal <- b[i]
for(j in 0:15){
savings_type[j + 1] <- type
balance[j + 1] <- future(10000, 0.10, j)
}
}
balance[j + 1] <- future_value(10000, 0.10, j)
for(i in 1:3){
a <- c('Regular Savings (r = 0.10%)', 'High Yield Savings (r = 2.25%)', 'Index Fund (r = 6.5%')
type <- a[i]
b <- c('No Contribution', 'Fixed Contribution', 'Growing Contribution')
modal <- b[i]
for(j in 0:15){
savings_type[j + 1] <- type
balance[j + 1] <- future_value(10000, 0.10, j)
}
}
savings_type
x <- readClipboard()
x
tolower(x)
casefold(x)
casefold(substr(x, 1, 1))
toupper(substr(x, 1, 1))
x <- casefold(x)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
factorial(nchar('ALABAMA')) / factorial(4)
# third way (for loops or sprintf)
sprintf('files%s.csv', 1:10)
# third way (for loops or sprintf)
sprintf('file%s.csv', 1:10)
?gsub
files <- sprintf('files%s.csv', 1:10)
files <- sprintf('file%s.csv', 1:10)
gsub('file', 'dataset', files)
states[num_chars == max(num_chars)]
states <- rownames(USArrests)
states <- rownames(USArrests)
states[num_chars == max(num_chars)]
num_chars <- nchar(states)
states[num_chars == max(num_chars)]
max(num_chars)
char_freqs <- table(num_chars)
char_freqs
length(char_freqs)
states_list <- list(1:11)
states_list
states_list[[1]]
states_list[[2]]
states_list[1]
states_list[1, 2
f
states_list[1, 2]
states_list[[1], [2]]
coin <- c('HEADS', 'TAILS')
coin
sample(coin, size =1 )
sample.int(2)
sample.int(3)
sample.int(1)
sample.int(1)
sample.int(1)
sample.int(10)
sample(coin, size = 4, replace = TRUE)
sample(coin, size = 2)
sample(coin, size = 2)
sample(coin, size = 2)
sample(coin, size = 2)
sample(coin, size = 2)
shiny::runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/draw_blue')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/draw_blue')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/draw_blue')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/draw_blue')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/draw_blue')
library(tidyverse)
box1 <- c("blue", "blue", "red")
box2 <- c("blue", "blue", "red", "red", "red", "white")
boxes <- c("box1", "box2")
repetitions <- 1000
drawn_balls <- matrix(character(repetitions), nrow = 1000, ncol = 4)
set.seed(123)
for(i in 1:repetitions){
input <- runif(1)
if(input > 0.5){
drawn_balls[i, ] <- sample(box1, 4, replace = T)
}
else{
drawn_balls[i, ] <- sample(box2, 4, replace = F)
}
}
blue_frequencies <- rowSums(drawn_balls == 'blue')
table(blue_frequencies) / 1000
blue_freqs <- vector(mode = 'list', length = 5)
for(num_blue in 0:4){
temp_freqs <- cumsum(blue_counts == num_blue) / (1:repetitions)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
box1 <- c("blue", "blue", "red")
box2 <- c("blue", "blue", "red", "red", "red", "white")
boxes <- c("box1", "box2")
repetitions <- 1000
drawn_balls <- matrix(character(repetitions), nrow = 1000, ncol = 4)
set.seed(123)
for(i in 1:repetitions){
input <- runif(1)
if(input > 0.5){
drawn_balls[i, ] <- sample(box1, 4, replace = T)
}
else{
drawn_balls[i, ] <- sample(box2, 4, replace = F)
}
}
blue_frequencies <- rowSums(drawn_balls == 'blue')
blue_frequencies
table(blue_freqs)
table(blue_frequencies)
dat
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_frequencies),
number = factor(rep(0:4, each = repetitions))
)
dat
blue_frequencies
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_frequencies),
number = factor(rep(0:4, each = repetitions))
)
dat
tail(dat)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat
str(dat)
drawn_balls
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_frequencies / (1:repetitions)),
number = factor(rep(0:4, each = repetitions))
)
dat
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
blue_counts <- apply(drawn_balls, 1, function(x) sum(x == 'blue'))
blue_counts
# progression of relative frequencies
blue_freqs <- vector(mode = "list", length = 5)
for (num_blue in 0:4) {
temp_freqs <- cumsum(blue_counts == num_blue) / (1:input$repetitions)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
# progression of relative frequencies
blue_freqs <- vector(mode = "list", length = 5)
blue_freqs
temp_freqs <- cumsum(blue_counts == num_blue) / (1:repetitions)
for (num_blue in 0:4) {
temp_freqs <- cumsum(blue_counts == num_blue) / (1:repetitions)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
blue_freqs
# progression of relative frequencies
blue_freqs <- vector(mode = "list", length = 5)
temp_freqs <- cumsum(blue_frequencies == num_blue) / (1:repetitions)
for (num_blue in 0:4) {
temp_freqs <- cumsum(blue_frequencies == num_blue) / (1:repetitions)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
blue_freqs
blue_freqs <- vector(mode = 'list', length = 5)
for(num_blue in 0:4){
temp_freqs <- cumsum(blue_counts == num_blue) / (1:repetitions)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_frequencies / (1:repetitions)),
number = factor(rep(0:4, each = repetitions))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_freqs / (1:repetitions)),
number = factor(rep(0:4, each = repetitions))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat <- data.frame(
reps = rep(1:repetitions, 5),
freqs = unlist(blue_freqs),
number = factor(rep(0:4, each = repetitions))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
drawn_balls <- matrix(character(input$repetitions), nrow = input$repetitions, ncol = 4)
drawn_balls <- matrix(character(input$repetitions), nrow = input$repetitions, ncol = 4)
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/labs/lab10/lab10')
rowSums
?rowSums
?apply
?format
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
runApp('C:/Users/hyshim05/Dropbox/UC Berkeley/Spring 2019/Stat 133/workout2/workout2')
